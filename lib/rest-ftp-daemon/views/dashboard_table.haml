-# coding: utf-8
- jobs.each do |job|
  - progress = job.get_info(:transfer, :progress)
  - source_count = job.get_info(:source, :count) || 0
  - source_processed = job.get_info(:source, :processed) || 0
  - source_current = job.get_info(:source, :current)
  - bitrate = job.get_info(:transfer, :bitrate)
  - trclass = JOB_STYLES[job.status]
  - runs = job.runs.to_i

  - unless job.error.nil?
    - trclass = "warning"

  %tr{class: trclass.to_s}
    %td
      %a{href: dashboard_job_url(job)}
        %b= job.id

    %td= job.label

    %td= job.pool

    %td{title: job.get_info(:source, :path)}
      = token_highlight job.source

    %td
      = job_method_label (job.get_info :target, :method)

    %td{title: job.get_info(:target, :url)}
      = token_highlight job.target

    %td
      = datetime_short(job.queued_at)

    %td
      %span.push-status
        = job.status

      - if (job.status != JOB_STATUS_FINISHED) && (source_processed < source_count)
        = " (#{source_processed}/#{source_count})"

      - if job.status == JOB_STATUS_UPLOADING

        - unless progress.nil?
          %span.push-progress
            = "#{progress}%"
        %br
        %span.push-filename
          %b= source_current unless source_current.nil?

    %td
      -# unless job.error || job.status == JOB_STATUS_FINISHED
      - if job.status == JOB_STATUS_UPLOADING
        .progress
          .progress-bar{style:"width: #{progress}%;"}
            = Helpers.format_bytes(job.get_info(:transfer, :sent), "B")

      - else
        .error{title: job.get_info(:error, :message)}
          = text_or_empty(job.error)

    %td.nobr.text-right
      = Helpers.format_bytes(job.get_info(:transfer, :total), "B")

    %td.nobr.text-right{title: "time: #{job.exectime} s"}
      - if bitrate
        %span.push-bitrate
          = Helpers.format_bytes(bitrate, "bps")

    %td
      - unless job.wid.nil?
        .label.label-warning.flag.worker-label= job.wid

    %td
      - unless job.priority.nil?
        .label.label-default.flag.worker-label= job.priority

    %td
      .label.flag.worker-label{class: Helpers.job_runs_style(runs)}= runs
